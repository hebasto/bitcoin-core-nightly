name: Windows
on:
  pull_request:
    paths:
      - '.github/actions/**'
      - '.github/workflows/windows.yml'
  schedule:
    - cron: '22 02 * * *'
  workflow_dispatch:
    inputs:
      skip_functional_tests:
        description: 'Skip functional tests'
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}${{ github.event_name != 'pull_request' && github.run_id || github.ref }}
  cancel-in-progress: true

jobs:
  windows-cross:
    name: 'Windows, cross-build only, MSVCRT: no GUI'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Bitcoin Core repo
        uses: actions/checkout@v5
        with:
          repository: bitcoin/bitcoin

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install g++-mingw-w64-x86-64-posix

      - name: Build depends
        run: |
          gmake -C depends -j $(nproc) HOST=x86_64-w64-mingw32 NO_QT=1 LOG=1

      - name: Generate buildsystem
        run: >
          cmake -B build \
            --toolchain depends/x86_64-w64-mingw32/toolchain.cmake \
            -DREDUCE_EXPORTS=ON \
            -DBUILD_BENCH=ON \
            -DBUILD_FUZZ_BINARY=ON \
            -DWERROR=ON \
            -DAPPEND_CXXFLAGS='-Wno-error=maybe-uninitialized'

      - name: Build
        run: cmake --build build -j $(nproc)

      - name: Upload built executables
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-w64-mingw32-executables-${{ github.run_id }}
          path: |
            build/bin/*.exe
            build/src/**/*.exe
            build/test/config.ini

  windows-native-test:
    name: 'Windows, test cross-built executables natively'
    runs-on: windows-latest
    needs: windows-cross
    defaults:
      run:
        shell: pwsh -Command "$PSNativeCommandUseErrorActionPreference = $true; $ErrorActionPreference = 'Stop'; & '{0}'"

    env:
      PYTHONUTF8: 1
      TEST_RUNNER_TIMEOUT_FACTOR: 40

    steps:
      - name: Checkout Bitcoin Core repo
        uses: actions/checkout@v5
        with:
          repository: bitcoin/bitcoin

      - name: Download built executables
        uses: actions/download-artifact@v4
        with:
          name: x86_64-w64-mingw32-executables-${{ github.run_id }}

      - name: Configure Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Check 'bitcoind.exe' executable
        run: |
          dumpbin.exe /imports .\bin\bitcoind.exe | Select-String -Pattern "\S+\.dll" -CaseSensitive:$false
          .\bin\bitcoind.exe -version

      - name: Run unit tests
        run: |
          .\bin\test_bitcoin.exe -l test_suite
          .\src\secp256k1\bin\exhaustive_tests.exe
          .\src\secp256k1\bin\noverify_tests.exe
          .\src\secp256k1\bin\tests.exe
          .\src\univalue\object.exe
          .\src\univalue\unitester.exe

      - name: Run benchmarks
        run: .\bin\bench_bitcoin.exe -sanity-check -priority-level=high

      - name: Adjust paths in test\config.ini
        run: |
          (Get-Content "test\config.ini") -replace '(?<=^SRCDIR=).*', '${{ github.workspace }}' -replace '(?<=^BUILDDIR=).*', '${{ github.workspace }}' -replace '(?<=^RPCAUTH=).*', '${{ github.workspace }}\share\rpcauth\rpcauth.py' | Set-Content "test\config.ini"
          Get-Content "test\config.ini"

      - name: Run functional tests
        env:
          # TODO: Fix the excluded test and re-enable it.
          EXCLUDE: '--exclude wallet_multiwallet.py'
        shell: cmd
        run: py -3 test\functional\test_runner.py --jobs %NUMBER_OF_PROCESSORS% --ci --quiet --tmpdirprefix=%RUNNER_TEMP% --combinedlogslen=99999999 --timeout-factor=%TEST_RUNNER_TIMEOUT_FACTOR% %EXCLUDE% --extended
